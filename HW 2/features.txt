print finally yield while not yield for from yield while return pass break try as from and class assert or break as assert continue continue break is else in class pass import yield pass raise finally exec raise global in,0
import with elif continue pass as elif try lambda global and yield assert finally raise class pass class try exec from del else if with if continue return yield pass except try del else and except if while except,6
finally yield elif as not except yield except class exec yield lambda pass assert finally if if from print del del is as assert except elif pass from except exec yield is del break print raise else pass if else with try exec,8
del except assert is for while or in for break break as def or raise or is for pass continue as continue return break as yield class except else lambda class and as global yield from from from class and print del yield is is,0
while elif try return finally except try class or from as in if if class global for lambda and from with and yield lambda exec or in try return elif return pass del del is while,2
finally class for del global or raise break raise lambda break as with del for and finally try del for exec import lambda while if continue lambda or return global with and break with pass class return continue with def,9
is if finally break with pass try elif in try from class exec from while global return exec import return with import import assert not elif if return raise and and break for global with try not pass assert,4
yield from yield class with assert lambda else while return yield is if not with else while import del for while yield and assert lambda raise pass return exec break not try continue yield assert return import class for finally elif try,8
or elif is global import is del global try and pass print not del return if yield del not if def except return else while from exec yield and global raise try with while not try break and break if or import is as not,5
import with class exec del break for for while in print with global from if try continue and from continue def assert as continue elif exec and print or in while continue in assert finally try and with import lambda as finally,3
finally del print elif break from del pass and is try finally del raise try import class return exec del with assert assert return from assert pass finally global global class pass in global return try print is,7
assert while return pass class if def def and try print raise return with and as class class is not lambda pass in if elif try import assert continue try print yield continue from break not break global def and from pass return,2
import import elif exec return import if return with is and lambda or except else assert not in import class del for is raise import break as continue pass as in global yield lambda break finally and as not return lambda class,6
is lambda exec as try class def def lambda import return with def import return in finally continue import class import del for return pass def assert as in or raise if while yield for exec,9
return return try except not and while as import as del del import from del except with class while continue def try with class class import def global exec while return yield yield exec import finally and with class try elif from continue def,9
lambda lambda class try continue if if or else lambda break exec break finally global print while finally exec break if return from lambda not and return print exec lambda as is class lambda exec lambda lambda if return finally def else,8
def and continue yield except raise continue class is pass else finally pass as assert and as from not finally or else exec else except and with else while from with del class elif as is try class print while print yield import,2
for not lambda not break as else finally in lambda except elif from try elif not exec del from or finally while yield else and with except finally as class class global del not elif del exec global global elif,7
as def with assert try del if return def elif lambda is is del elif as is from elif and elif pass not while as print finally pass raise break pass exec while try for import continue else pass finally,3
class else try return try assert in while is pass lambda print lambda try def pass with pass pass not or for not with is break del class def break if for break print except class in,8
continue assert try return for else lambda is if try while elif exec and global else elif as finally and exec for elif import except class try not is global lambda def yield and raise with elif continue not for,2
from del not while global assert print in import finally or continue del del and while as class elif exec if break lambda class print raise else def import except exec break except as in,5
from try or from as not for exec elif break not pass is pass import raise def while assert break continue except pass continue is raise lambda for continue break try from exec assert not global as global,2
or and while lambda break global if if else import global lambda del if else import continue return del yield raise exec in finally print as return lambda while raise lambda else print def except raise yield import elif not class return,7
as print from while lambda as break continue not import else for import with is raise as import global as pass try from with raise with pass except elif class except del class return continue elif lambda assert and while,8
for exec print for return del except exec if try print yield raise raise return in def from global class except as if lambda global global in def not lambda else while with finally while in not pass for from break continue return,9
pass elif if def while import break global raise import assert or def not global yield continue elif raise assert def for or assert return return with except is not assert in lambda else from del not or pass finally continue import finally,6
while else as return in with finally continue print and is continue yield else global yield elif with def class if if except not for or class finally except return import global for continue from in elif del exec def is print pass elif del,2
global elif elif exec assert try finally if is lambda or or from print elif except global print raise for assert global as is lambda yield yield continue def with assert exec break lambda break,5
raise while with for exec and raise as if finally as yield exec continue except assert break global return from from as class with from return finally not print yield raise def return continue except not assert lambda exec return def in,8
or from del not global if print in return raise not try lambda del with is lambda exec def return lambda with while else lambda global import finally try else and if lambda finally else raise from del import for assert return exec import,1
yield def for for finally exec yield continue if class finally except while lambda except is not return def and as except break elif exec with elif print finally def continue or raise print from elif class continue,7
print raise def in del while return try yield finally class exec with class exec yield else del with global del and finally from global global class with print or elif if return yield is if finally finally,6
yield is for exec is as for exec not or as import global import if with del finally as except except lambda raise for lambda try continue del with yield else not continue return while is exec def else or,6
else if and yield finally with is yield as break except not class or except with continue yield or not else try else assert break as while global import continue global exec global def del,6
with for from assert lambda and and while class is yield import else print exec pass and for is for from with for not pass or in del if else exec global while yield lambda print in,7
finally from from del exec elif as or is is assert return else in in global import finally is is or or or lambda not from except except return in pass global from if except def break yield def,0
not import and class else from not as except elif from raise global raise print in exec exec or as from except import import break finally pass yield lambda break global lambda with def yield with in with break try yield,5
def import return finally for raise print else yield pass in else continue continue raise import and while exec yield yield global or def break return def break exec with elif del continue class not del try with or yield print assert assert,9
elif global raise for def def as assert is continue try raise return print elif for if for break def continue global finally exec finally not for return continue for or except and return raise def assert return yield else pass,0
finally except raise try finally del pass in while try except while continue global break except class in is try import elif pass continue try lambda as finally print is and break else for def with,5
if and while pass elif from continue def in print else with for del del del continue assert else global while lambda global raise class yield del lambda assert print print return try global return def,1
else assert return class global exec elif import from del pass import not from while class for raise global elif exec import try lambda for break del as global class else from yield raise not elif del pass elif raise finally,3
assert is not as lambda is in raise for pass lambda finally import lambda and def global print del print in pass or in from else from raise if with yield del global or assert is return finally not global not else elif print in,4
with in raise continue continue while for try as raise yield yield yield yield import continue with or pass return raise pass finally try del while class from is in break exec del is continue try class and,6
is exec with is not in and for raise global in import from yield elif break raise raise yield def exec with finally from global or else not break return global or def try lambda and assert in def continue if break,8
elif try not else class else or import pass from assert with pass for pass continue pass raise raise and global assert pass in continue as global del elif except try in with class del return exec not assert del print finally in,1
break elif not def yield not for if except assert finally continue and except return as class del exec elif or del return as elif while finally break finally raise continue assert as del pass,5
elif if break finally not yield return for print def raise from if return raise exec from import import try break raise or for for yield if or in in continue class in def lambda or,3
or def return import except with except import not finally del continue elif else raise class class is global else with def from except del return del for except pass exec continue class and import,8
try global for not continue print or from break class not return yield in global return not assert try import del class for or def for from assert print not lambda with as except print if,8
if for for not import exec as lambda not in continue global return not not def for with pass return continue from elif or exec else finally not raise finally while is try if as and import,8
yield yield for del and try elif yield return lambda class for raise else or import as def try return try lambda and yield as is print is print not pass finally assert import from else return def def del else print,4
break exec except not elif break else lambda try try lambda try and raise continue in as import for print return pass not except from finally break except class lambda while else as continue finally class from break,3
is else as def exec del finally break lambda with if except from class print as print exec global with assert while continue lambda from exec continue while lambda elif in for lambda yield raise with try continue from not if def class,3
pass class print pass from lambda try else is in print lambda else def global exec if except class is except del from del pass finally elif assert del continue exec try if for while continue assert def and from global,1
lambda def and assert is except except assert assert while if is else global if return with as elif for except from raise finally del class for except lambda return global else for or for as or for raise and,3
with or finally try def with is while in if lambda or import raise in in for try break exec raise and except else or if not print pass finally except exec lambda lambda return while def from,1
print lambda elif else lambda finally print print import else elif pass pass return pass break assert del assert while else try with in raise yield or yield continue print exec finally is else yield in assert for def class if,1
import or not else del lambda del try as not pass in elif with pass global while from in del finally finally for try yield def try global import with yield raise pass return exec,0
import from del elif else return in else in else with while return class return as exec print if while exec is global for if not try is pass return as del except with elif for from lambda else as break,3
lambda del except finally lambda break return global import def pass as from finally class yield as with continue def try if else lambda def with pass def def in finally pass except in with try not try break class,3
in else class elif elif assert from in as from del try import assert finally else del elif print in return def class assert print print global is else del except import except not and exec while assert except continue break while,8
class not and yield class global not not class in is if is del del import in raise else elif yield as pass and except def def and from import elif elif in try lambda if,7
while for try global print and is or or finally in else except continue while assert with finally not and else lambda try def in as pass raise try def is print or pass or class continue,6
yield continue or and except from class or assert try class finally yield print finally as del return try exec def is not pass return raise break except if return import exec finally class finally,4
if except continue lambda as pass assert elif except is def def in with pass return assert continue global from import in global while return try assert yield elif exec print except elif with if print def try exec for is,1
pass return if exec while if while as elif is import or for lambda and else exec with in not or elif import for as raise def yield yield and is global import yield lambda assert else try,4
is as print exec def or and assert raise import as elif in exec yield lambda else or with except print raise while while raise in finally or as if else print else del assert global continue assert as or as,3
else raise pass break in or try global except while def as def exec in with finally yield global and for not assert raise not for import and global else global print lambda if while,8
while if except continue yield lambda def for from else in print with pass except if print yield return else del try import lambda assert except class in else global raise exec lambda continue try not except not elif elif try raise,9
import for or is try or exec while return or return from for del assert del while exec del lambda is while in for is if except as or and import except exec break assert exec raise not,8
in assert return assert lambda except as global in raise raise class break elif with return global print assert print in assert class else global yield elif class return if print def not lambda in del for from except is lambda,9
and and if pass raise global continue finally or not from lambda raise from while is while def except except with except from try global return in is break except for global or def in from continue if global and elif print yield return,4
raise finally elif with class break return class try for elif in import print lambda continue is else finally print import exec import raise or continue as as if not lambda for and while for while def finally global,6
return for finally lambda not import from exec break with def print global finally try elif del global finally assert class with pass elif pass if as as as from while pass is pass not raise as break,1
elif del return pass else raise def not in raise except break return assert from try yield is del except break try break break else import elif if finally return not return yield continue assert import as not if finally class try yield if,8
import import global def finally not lambda print import def pass in with break global except continue or is exec def as try print assert except continue from continue assert import lambda print lambda is for as else finally try import,7
return break elif try for continue if as with return print for if del print else pass if finally in break except except in while yield if not for import raise exec raise not return lambda print import or break def,3
def while exec from class else except break elif break class is raise is assert and or raise continue except continue def elif yield assert with not continue del def except break pass and raise,8
with import break print not as lambda with del finally break def except finally try exec import for break import raise in or else del import else assert as is assert assert break not def import global not lambda break else def return finally,4
import lambda else else except def in else return try del print def if def lambda raise break import else def return continue or except as is continue import for while while assert and def and as not raise try not and,8
global continue def as with class elif with not from import try exec else while try global in or else not from if global elif except pass break while elif for class exec print else pass not pass and as return else if import,0
except try finally in yield exec yield elif is pass with class del while for pass raise try del from global or exec as return raise raise or assert or while yield class raise is with exec def exec exec in not def raise,2
print for try or not class def import not print with elif or for else for not pass finally in for pass is pass while exec as finally try in is in in from with if assert continue pass or exec yield elif,3
else except while not yield is pass yield for del if del if for or exec while else or is try or del and for if is else pass exec break yield as exec or raise finally else exec or,1
print and import del raise pass def in del not pass assert return for print for else not class assert pass del while return exec as elif in not from and class for global print global,8
print try import del del pass try import raise in for and finally def try raise in if while elif return yield raise lambda in with continue if global global class pass for else finally is global del not break del,9
is print exec global break break assert not import as or while try import except if return raise try from print print except lambda except class class in and break else del or from except,0
try with for raise global def from continue raise assert return finally pass except class lambda def continue except import finally from raise as not pass if break pass as return except as yield and,6
global class import in except if yield raise class while except if global is or as as from class import not or not in except in from break else else class del in while from global def,2
except and return try import from and finally elif in class elif exec if finally while assert print if not exec import global or else from or if and from not else as while def pass is global import exec print and or is finally,6
print try class global raise from pass print or exec class del break not is continue exec break for is continue is break and print global from finally elif raise for pass and while yield lambda,2
or return assert pass print if else in exec del raise break not print continue try is continue yield lambda not continue elif else del def exec global elif for try yield lambda global as and elif pass global and as for,7
while global not elif finally as return elif import assert from not global not break exec not while as lambda not from try from as from in else global with with pass in with global elif continue,8
or break exec and raise not break if import return and lambda continue and import if or global if exec yield exec in and if global from as and if try finally if break as is break not class if lambda lambda raise and,8
assert try else def from continue lambda del not lambda assert global with break not except is except in as from pass in with raise elif else or raise continue and or for break with pass and from for else break raise try as,1
lambda lambda pass is def exec global try not break with or print finally if pass break exec continue raise print or try pass raise continue try and continue finally break lambda return print try def elif elif raise from print else yield raise if,9
from from import as in from yield print not break def del if class del while finally else with if while in is raise and pass except while while while class print class import return print with else from and,7
def pass finally is exec in and is with except import and is and exec while pass not pass if continue def else elif from print continue assert pass continue is while try and import raise assert is if or finally,6
